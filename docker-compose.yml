version: "3.6"

services:

  expenses-webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    image: expenses-webapp
    container_name: expenses-webapp
    command: "npm start"
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_SPLITWISE_API_BASE_URL=${REACT_APP_SPLITWISE_API_BASE_URL}
      - REACT_APP_MOCK_APIS=${REACT_APP_MOCK_APIS:-false}
    volumes:
      - ./webapp:/app

      # create an empty directory at `/app/node_modules` instead of using the previously
      # mounted `./webapp/node_modules` directory, so the host's `node_modules` ownership
      # doesn't pass to the container's user
      - /app/node_modules

  qr:
    build:
      context: ./qr
      dockerfile: Dockerfile
    image: qr
    container_name: qr
    volumes:
      - ./qr:/app

  postgres:
    image: postgres:13
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  hasura_graphql_engine:
    # image: hasura/graphql-engine:v2.1.1.cli-migrations-v3
    # TODO: use the image aboveto automatically apply migrations
    #       docs: https://hasura.io/docs/latest/graphql/core/migrations/advanced/auto-apply-migrations/#cli-migrations-image
    #
    image: hasura/graphql-engine:v2.7.0
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      # Accepts from all domain
      HASURA_GRAPHQL_CORS_DOMAIN: "*"

  hasura_cli:
    image: hasura/graphql-engine:v2.1.1.cli-migrations-v3
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./api/migrations:/hasura-migrations
      # - ./api/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres

volumes:
  db_data:
